import { Inject, Injectable, Logger } from "@nestjs/common";
import { globalRetryConfig } from "config";
import { Sdk } from "src/qntypes-atlas";
import { Retryable } from 'typescript-retry-decorator';


/**
 * Decorator around the autogenerated `Sdk` that enables retry mechanism for Query Node calls
 */
@Injectable()
export class RetryableAtlasClient {
  private readonly logger = new Logger(RetryableAtlasClient.name);

  constructor(
    @Inject("AtlasGqlSdk") private readonly atlas: Sdk,
  ) { }

  @Retryable(globalRetryConfig)
  async getVideoById(id: string) {
    this.logger.debug(`Fetching Atlas video ${id}`);
    const video = await this.atlas.getVideoById({videoId: id});
    if(!video.videoByUniqueInput) {
      throw new Error();
    }
    return video;
  }

  @Retryable(globalRetryConfig)
  async getDistributionBucketsWithOperators() {
    this.logger.debug(`Fetching distributor buckets`);
    const buckets = await this.atlas.getDistributionBucketsWithOperators();
    if(!buckets.distributionBuckets || buckets.distributionBuckets.length === 0) {
      throw new Error();
    }
    return buckets;
  }
}